# 限制linux CPU 使用率
## 使用linux系统命令
### `nice`
设置进程优先级，进程的优先级为 -20～19，默认为0，19为最低优先级


### `cgroup`
Cgroups全称Control Groups，是Linux内核提供的物理资源隔离机制，通过这种机制，可以实现对Linux进程或者进程组的资源限制、隔离和统计功能。

比如可以通过cgroup限制特定进程的资源使用，比如使用特定数目的cpu核数和特定大小的内存，如果资源超限的情况下，会被暂停或者杀掉。

Cgroup是于2.6内核由Google公司主导引入的，它是Linux内核实现资源虚拟化的技术基石，LXC(Linux Containers)和docker容器所用到的资源隔离技术，正是Cgroup。

[Cgroup详解 ](https://juejin.cn/post/6921299245685276686)
[一篇搞懂容器技术的基石： cgroup](https://zhuanlan.zhihu.com/p/434731896)
[浅谈Linux Cgroups机制 (使用教学)](https://zhuanlan.zhihu.com/p/81668069)
[The Linux Kernel](https://www.kernel.org/doc/html/latest/translations/zh_CN/index.html)


*在 docker 容器中 /proc/pid/limits 记录了进程的资源限制 *

### `cpulimit`

[linux的cpu和磁盘io优先级设置](https://www.cnblogs.com/czw-bk/p/10961348.html)

## 限制程序使用的CPU核心
使用 ched_setaffinity() 将一个进程或者一个线程控制在CPU某些核心中运行

[C++关于控制CPU利用率相关代码](https://blog.csdn.net/ysn198979/article/details/119803510)

## 
使用 setrlimit() 函数限制进程资源使用量：可以使用setrlimit函数设置进程可以使用的资源限制。通过设定RLIMIT_AS来限制进程的地址空间大小（即内存占用量），可以限制进程的内存使用率。通过设定RLIMIT_CPU来限制进程的CPU时间，可以限制进程的CPU使用率。

```auto
resource：可能的选择有

RLIMIT_AS //进程的最大虚内存空间，字节为单位。
RLIMIT_CORE //内核转存文件的最大长度。
RLIMIT_CPU //最大允许的CPU使用时间，秒为单位。当进程达到软限制，内核将给其发送SIGXCPU信号，这一信号的默认行为是终止进程的执行。然而，可以捕捉信号，处理句柄可将控制返回给主程序。如果进程继续耗费CPU时间，核心会以每秒一次的频率给其发送SIGXCPU信号，直到达到硬限制，那时将给进程发送 SIGKILL信号终止其执行。
RLIMIT_DATA //进程数据段的最大值。
RLIMIT_FSIZE //进程可建立的文件的最大长度。如果进程试图超出这一限制时，核心会给其发送SIGXFSZ信号，默认情况下将终止进程的执行。
RLIMIT_LOCKS //进程可建立的锁和租赁的最大值。
RLIMIT_MEMLOCK //进程可锁定在内存中的最大数据量，字节为单位。
RLIMIT_MSGQUEUE //进程可为POSIX消息队列分配的最大字节数。
RLIMIT_NICE //进程可通过setpriority() 或 nice()调用设置的最大完美值。
RLIMIT_NOFILE //指定比进程可打开的最大文件描述词大一的值，超出此值，将会产生EMFILE错误。
RLIMIT_NPROC //用户可拥有的最大进程数。
RLIMIT_RTPRIO //进程可通过sched_setscheduler 和 sched_setparam设置的最大实时优先级。
RLIMIT_SIGPENDING //用户可拥有的最大挂起信号数。
RLIMIT_STACK //最大的进程堆栈，以字节为单位。
```

```auto
#include <sys/resource.h>
void init_core_dump()
{
    struct rlimit limit;

    memset(&limit, 0, sizeof(limit));
    limit.rlim_cur = RLIM_INFINITY; //软限制，表示对资源没有限制
    limit.rlim_max = RLIM_INFINITY; //硬限制，这个参数表示对资源没有限制，一定要大于等于rlim_cur值
    setrlimit(RLIMIT_CORE, &limit);
}

int main(void)
{
    init_core_dump();

    return 0;
}
```

[linux下getrlimit()与setrlimit()函数说明及使用](https://blog.csdn.net/wgl307293845/article/details/106897131)
[setrlimit(2) - Linux man page](https://linux.die.net/man/2/setrlimit)

## 在一段时间内暂停程序运行
例如：CPU的一个时间片为20ms，可以在线程的主循环中sleep 10 ms
